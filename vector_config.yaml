sources:
  in:
    type: http_server
    address: ${HOST}:${PORT}
    headers:
      - "*"

transforms:
  parse_json:
    type: remap
    inputs:
      - in
    source: |
      .message = parse_json!(.message) # Parses the 'message' field without restructuring

  router:
    type: route
    inputs:
      - parse_json
    route:
      fastchat_logs: '.message.type == "leftvote" || .message.type == "rightvote" || .message.type == "tievote" || .message.type == "bothbad_vote"'
      search_arena_logs: 'exists(.message.request_id)'

  set_route_fastchat:
    type: remap
    inputs:
      - router.fastchat_logs
    source: |
      .route = "fastchat"

  set_route_search_arena:
    type: remap
    inputs:
      - router.search_arena_logs
    source: |
      .route = "search_arena"

  sample:
    type: sample
    inputs:
      - set_route_fastchat
      - set_route_search_arena
    rate: 1 # 1 out of 1 events will be passed through

sinks:
  console_out:
    type: console
    encoding:
      codec: json
    inputs:
      - sample

  out:
    type: gcp_cloud_storage
    inputs:
      - set_route_fastchat
      - set_route_search_arena
    bucket: ${GCS_BUCKET_NAME:?the bucket name must be supplied via GCS_BUCKET_NAME env var}
    encoding:
      codec: json
    framing:
      method: newline_delimited
    key_prefix: "{{route}}/year=%Y/month=%m/day=%d/"
    batch:
      max_events: ${GCS_BATCH_MAX_EVENTS:-1000}
      timeout_secs: ${GCS_BATCH_TIMEOUT_SECS:-300}