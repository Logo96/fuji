sources:
  in:
    type: http_server
    address: ${HOST}:${PORT}
    headers:
      - "*"

transforms:
  parse_message:
    type: remap
    inputs:
      - in
    source: |
      # Parse the JSON string in the "message" field
      .message = parse_json!(.message)
      # Copy the "source" field from the parsed message to the top level
      .source = .message.source

  router:
    type: route
    inputs:
      - parse_message
    route:
      fastchat_logs: '.source == "fastchat"'
      search_arena_logs: '.source == "search-arena"'
      unmatched: '((.source != "fastchat") && (.source != "search-arena"))'

  set_route_fastchat:
    type: remap
    inputs:
      - router.fastchat_logs
    source: |
      .route = "fastchat"

  set_route_search_arena:
    type: remap
    inputs:
      - router.search_arena_logs
    source: |
      .route = "search-arena"

  set_route_unmatched:
    type: remap
    inputs:
      - router.unmatched
    source: |
      .route = "unmatched"

  sample:
    type: sample
    inputs:
      - set_route_fastchat
      - set_route_search_arena
      - set_route_unmatched
    rate: 1

sinks:
  console_out:
    type: console
    encoding:
      codec: json
    inputs:
      - sample
      - in

  out:
    type: gcp_cloud_storage
    inputs:
      - set_route_fastchat
      - set_route_search_arena
      - set_route_unmatched
    bucket: ${GCS_BUCKET_NAME:?the bucket name must be supplied via GCS_BUCKET_NAME env var}
    encoding:
      codec: json
    framing:
      method: newline_delimited
    key_prefix: "{{route}}/year=%Y/month=%m/day=%d/"
    batch:
      max_events: ${GCS_BATCH_MAX_EVENTS:-1000}
      timeout_secs: ${GCS_BATCH_TIMEOUT_SECS:-300}
